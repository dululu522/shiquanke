//
//  CMCOrderMakeSureVC.m
//  ChinaMobileCommunity
//
//  Created by mac on 15-2-5.
//  Copyright (c) 2015年 zhangyanqiu. All rights reserved.
//

#import "CMCOrderMakeSureVC.h"
#import "CMCOrderMakeSureCell.h"
#import "CMCAddressItem.h"
//#import "AddAddressViewController.h"
#import "CMCFoodReservationTimeVC.h"
#import "MAddressViewController.h"
#import "CustomTextField.h"
#import "CMCOrderSucesssViewController.h"
#import "CMCBestPayModel.h"


@interface CMCOrderMakeSureVC ()<UITableViewDataSource,UITableViewDelegate,UITextFieldDelegate>
{
    UIView *payMethodV;
    CustomTextField *nameTF;
    CustomTextField *phoneTF;
    CustomTextField *beizhuTF;
    UITextField *textF;
    UIView *infoV;
    UILabel *timeL;
    
    UILabel *_nameL;
    UILabel *_placeL;
    
    NSString *_order_money; //是否超过这个额度
    NSString *_express_money;//物流费
    NSString *_totalMoney; //付的总钱数
    
}
@property (nonatomic,strong)UITableView *orderTableView;
@property (nonatomic,strong)TPKeyboardAvoidingScrollView *infoScrollView;
@property (nonatomic,strong)NSMutableArray *orderArr;
@property (nonatomic,strong)NSString *payment;
@property (nonatomic, strong) NSMutableArray *datasArray;
@property (nonatomic,strong)NSMutableArray *textFieldArray;




@end

@implementation CMCOrderMakeSureVC

- (NSMutableArray *)textFieldArray{
    if (_textFieldArray == nil) {
        self.textFieldArray = [NSMutableArray array];
    }
    return _textFieldArray;
}

- (NSMutableArray *)orderArr{
    if (_orderArr == nil) {
        self.orderArr = [NSMutableArray array];
    }
    return _orderArr;
}
- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
    if ([[[NSUserDefaults standardUserDefaults] objectForKey:@"selectAddress"] isKindOfClass:[NSDictionary class]]) {
        
        NSLog(@"将用户选择的地址存储到本地 %@",[[NSUserDefaults standardUserDefaults] objectForKey:@"selectAddress"]);
        NSString *name = [[[NSUserDefaults standardUserDefaults] objectForKey:@"selectAddress"] objectForKey:@"name"];
        NSString *phone = [[[NSUserDefaults standardUserDefaults] objectForKey:@"selectAddress"] objectForKey:@"phone"];
        NSString *address = [[[NSUserDefaults standardUserDefaults] objectForKey:@"selectAddress"] objectForKey:@"address"];
        _nameL.text = [NSString stringWithFormat:@"%@  %@",name,phone];
        _placeL.text = address;
    }
}
- (void)viewDidLoad {
    [super viewDidLoad];
    self.automaticallyAdjustsScrollViewInsets = NO;
    self.view.backgroundColor = [UIColor colorWithHexString:@"f5f4f4"];
    self.datasArray = [[NSMutableArray alloc] init];
    self.title = @"订单详情";
    // Do any additional setup after loading the view.
    self.payment = @"1";
    [self dataDealWith];//数据处理
    
    [self createSubViews];
    //添加通知，得到取件时间
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(addData:) name:@"addData" object:nil];
    [self isTrue];
    
}

- (void)addData:(NSNotification *)sender{
    NSString *time = sender.object;
    NSLog(@"time ======= %@",sender.object);
    timeL.text = time;
    
}

#pragma mark - 数据处理 -

- (void)dataDealWith{
    NSArray *valueArr = self.orderDic.allValues;
    NSArray *keyArr = self.orderDic.allKeys;
    for (int i = 0; i < keyArr.count; i++) {
        NSMutableArray *tmpArr = [NSMutableArray arrayWithArray:keyArr[i]];
        [tmpArr addObject:valueArr[i]];
        [self.orderArr addObject:tmpArr];
    }
    NSLog(@"self.orderArr = %@",self.orderArr);
}



#pragma mark - 创建子视图 -
- (void)createSubViews{
    [self setupTableView];//tableview
    [self setupScrollView];//底部scrollview
    //具体信息
    [self setupInfoScrollView];
    
    [self setupPayMethod];
    
    //购物车之类
    [self creatBottomView];
    
}

- (void)setupTableView{
    
    _orderTableView = [[UITableView alloc]initWithFrame:CGRectMake(0, 0, self.view.width,200) style:UITableViewStyleGrouped];
    _orderTableView.delegate = self;
    _orderTableView.dataSource = self;
    _orderTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    
    
    [self.view addSubview:_orderTableView];
}


- (void)setupScrollView{
    _infoScrollView = [[TPKeyboardAvoidingScrollView alloc]init];
    _infoScrollView.frame = CGRectMake(0, _orderTableView.bottom, self.view.width, self.view.height - _orderTableView.bottom - 70 - 49);
    _infoScrollView.backgroundColor = k_color(@"f5f4f4");
    [self.view addSubview:_infoScrollView];
}

//点菜
- (void)setupOrderScrollViewWithBtm:(CGFloat)btm{
    _infoScrollView.backgroundColor = [UIColor whiteColor];
    
    nameTF = [self createTLWithFrame:CGRectMake(13, 11 + btm, 30, 11) category:@"姓名:" superView:_infoScrollView];
    phoneTF = [self createTLWithFrame:CGRectMake(13, 44 + btm, 30, 11) category:@"电话:" superView:_infoScrollView];
    beizhuTF = [self createTLWithFrame:CGRectMake(13, 77 + btm, 30, 11) category:@"备注:" superView:_infoScrollView];
    [self.textFieldArray addObject:nameTF];
    [self.textFieldArray addObject:phoneTF];
    [self.textFieldArray addObject:beizhuTF];
    
    
}
- (void)loadUserInformation
{
    [self.datasArray removeAllObjects];
    //获取我的地址数据
    [MBProgressHUD showHUDAddedTo:self.view animated:YES];
    //    ;
    if ([CMCUserManager shareManager].token) {
        NSString *timestamp = kAPI_timestamp;
        NSDictionary *dic = @{@"channel":KAPI_NewChannel,@"token":[CMCUserManager shareManager].token,@"app_ver":APPVersion,@"timestamp":timestamp};
        //        NSLog(@"我的地址:%@",dic);
        NSString *sig= [BaseUtil getSigWithArray:dic];
        
        NSString *requestStr = KAPI_Myaddress(timestamp, [CMCUserManager shareManager].token, [BaseUtil md5:sig]);
        [BaseUtil get:requestStr success:^(id respondObject) {
            NSLog(@"我的地址 %@",respondObject);
            
            NSDictionary *infoDic = [respondObject objectForKey:@"info"];
            if ([[infoDic objectForKey:@"result"] intValue] == 0) {
                if ([respondObject objectForKey:@"data"]) {
                    NSArray *dataArr = [respondObject objectForKey:@"data"];
                    for (NSDictionary *tempDic in dataArr) {
                        [self.datasArray addObject:[CMCAddressItem fromDict:tempDic]];
                        
                    }
                    CMCAddressItem *addressItem = [self.datasArray lastObject];
                    _nameL.text = [NSString stringWithFormat:@"%@  %@",addressItem.name,addressItem.phone];
                    _placeL.text = addressItem.address;
                    
                    [MBProgressHUD hideAllHUDsForView:self.view animated:YES];
                    //                    [self.tableView reloadData];
                } else {
                    [BaseUtil toast:@"暂无收货地址"];
                    [MBProgressHUD hideAllHUDsForView:self.view animated:YES];
                    return;
                    
                }
            } else {
                
                [BaseUtil toast:@"数据加载失败,请重新加载"];
                [MBProgressHUD hideAllHUDsForView:self.view animated:YES];
                return;
                
            }
            
            
        } failure:^(NSError *error) {
            
        }];
        
    } else {
        
        [BaseUtil toast:@"请登录后再试"];
        [MBProgressHUD hideAllHUDsForView:self.view animated:YES];
        
        
    }
    //    [_request loadDataWithURLString:requestStr];
    
    
}


//外卖
- (void)setupInfoScrollView{
    [self loadUserInformation];
    //洗衣修鞋订单确认的情况
    float botm = 0.0;
    NSLog(@"--------%@",self.category);
    //有时间
    if ([self returnIsHaveTimeL]) {
        //取件时间
        UIView *takesV = [self createVWithFrame:CGRectMake(0, 0, self.view.width, 41)];
        botm = takesV.bottom + 6;
        
        UILabel *titleL = [self createLWithFrame:CGRectMake(13, 15,65, 13) font:13 textColor:@"7f7f7f" superView:takesV];
        titleL.text = [self returnTitleName];
        
        timeL = [self createLWithFrame:CGRectMake(titleL.right, 15, self.view.width - titleL.right, 15) font:13 textColor:@"7f7f7f" superView:takesV];
        UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc]initWithTarget:self action:@selector(timeAction:)];
        [takesV addGestureRecognizer:tap];
        
    }
    //点菜类
    if ([self returnOrderYesOrNo]) {
        [self setupOrderScrollViewWithBtm:botm];
    }else{
        //外卖类
        //备注
        UIView *beizhuV = [self createVWithFrame:CGRectMake(0,botm, self.view.width, 41)];
        UILabel *beizhuL = [self createLWithFrame:CGRectMake(19, 15, 30, 13) font:13 textColor:@"7f7f7f" superView:beizhuV];
        beizhuL.text = @"备注:";
        
        textF = [[UITextField alloc]init];
        textF.frame = CGRectMake(beizhuL.right, beizhuL.top, self.view.width - beizhuL.right, 13);
        textF.delegate = self;
        textF.font = k_font(13);
        textF.textColor = k_color(@"7f7f7f");
        [beizhuV addSubview:textF];
        
        
        //具体信息
        infoV = [self createVWithFrame:CGRectMake(0, beizhuV.bottom + 6, self.view.width, 84)];
        
        _nameL = [self createLWithFrame:CGRectMake(19, 18, 230, 13) font:13 textColor:@"7f7f7f" superView:infoV];
        
        _placeL = [self createLWithFrame:CGRectMake(19, _nameL.bottom + 24, 230, 13) font:13 textColor:@"7f7f7f" superView:infoV];
        
        
        UIButton *addBtt = [UIButton buttonWithType:UIButtonTypeCustom];
        addBtt.frame =CGRectMake(self.view.width - 69, 0, 69, 84);
        [addBtt setImage:[UIImage imageNamed:@"convenience_addAddress"] forState:UIControlStateNormal];
        [addBtt addTarget:self action:@selector(addAddressAction:) forControlEvents:UIControlEventTouchUpInside];
        [infoV addSubview:addBtt];
    }
    
}

#pragma mark - 选择收货地址
//增加地址
- (void)addAddressAction:(UIButton *)sender{
    NSLog(@"增加地址");
    MAddressViewController* add = [[MAddressViewController alloc]init];
    add.titleStr = self.title;
    [self.navigationController pushViewController:add animated:YES];
    
    
}


- (void)timeAction:(UITapGestureRecognizer *)sender{
    
    CMCFoodReservationTimeVC *foodReservationVC = [[CMCFoodReservationTimeVC alloc] init];
    foodReservationVC.title = @"选择时间";
    [self.navigationController pushViewController:foodReservationVC animated:YES];
    
}


//支付方式
- (void)setupPayMethod{
    
    //支付方式
    if ([self returnOrderYesOrNo]) {//点菜类
        payMethodV = [self createVWithFrame:CGRectMake(0,beizhuTF.bottom + 8, self.view.width, 96)];
        
    }else{
        payMethodV = [self createVWithFrame:CGRectMake(0, infoV.bottom + 5, self.view.width, 96)];
    }
    UILabel *methodL = [self createLWithFrame:CGRectMake(22, 10, 100, 13) font:13 textColor:@"4e4e4e" superView:payMethodV];
    methodL.text = @"支付方式:";
    
    for (int i = 0; i < 2; i++) {
        UIView *view = [[UIView alloc]init];
        view.frame = CGRectMake(22, 32 + 32 * i, self.view.width - 44, 0.5);
        if ([self.service_id isEqualToString:@"1"]) {
            view.backgroundColor = k_color(@"");
        }else{
            view.backgroundColor = k_color(@"ededed");
        }
        
        [payMethodV addSubview:view];
        
        UILabel *payMethodL = [self createLWithFrame:CGRectMake(38, view.bottom + 10, 60, 13) font:13 textColor:@"808080" superView:payMethodV];
        if (i == 0) {
            payMethodL.text = @"线上支付:";
        }else{
            payMethodL.text = @"线下支付:";
        }
        
    }
    
    
    //翼支付
    //    [self createBttWithFrame:CGRectMake(134, 42, 70, 13) imageName:@"convenience_select" title:@"翼支付" action:@selector(didClickAction:) superView:payMethodV tag:1500];
    //支付宝
    //    [self createBttWithFrame:CGRectMake(224, 42, 70, 13) imageName:@"convenience_uncheck" title:@"支付宝" action:@selector(didClickAction:) superView:payMethodV tag:1501];
    
    [self createBttWithFrame:CGRectMake(134, 42, 70, 13) imageName:@"convenience_select" title:@"支付宝" action:@selector(didClickAction:) superView:payMethodV tag:1501];
    //货到付款
    [self createBttWithFrame:CGRectMake(134, 74, 70, 13) imageName:@"convenience_uncheck" title:@"货到付款" action:@selector(didClickAction:) superView:payMethodV tag:1502];
    
    
    _infoScrollView.contentSize = CGSizeMake(self.view.width,payMethodV.bottom + 7);
}


- (void)didClickAction:(UIButton *)sender{
    for (int i = 0;i < 3; i++) {
        UIButton *btt = (UIButton *)[payMethodV viewWithTag:(1500 + i)];
        [btt setImage:[UIImage imageNamed:@"convenience_uncheck"] forState:UIControlStateNormal];
    }
    [sender setImage:[UIImage imageNamed:@"convenience_select"] forState:UIControlStateNormal];
    if (sender.tag == 1500) {
        self.payment = @"2";
    }
    if (sender.tag == 1501) {
        self.payment = @"1";
    }
    if (sender.tag == 1502) {
        self.payment = @"0";
    }
    
    
}

- (void)creatBottomView
{
    UIView *bottomView = [[UIView alloc] initWithFrame:CGRectMake(0, self.view.frame.size.height - 120, self.view.frame.size.width, 70)];
    bottomView.backgroundColor = [UIColor whiteColor];
    //分割线
    UIView *sepeV = [[UIView alloc]init];
    sepeV.frame = CGRectMake(0,0, self.view.width, 0.5);
    sepeV.backgroundColor = [UIColor lightGrayColor];
    [bottomView addSubview:sepeV];
    [self.view addSubview:bottomView];
    //合计
    UILabel *combinedLabel = [[UILabel alloc] initWithFrame:CGRectMake(20, 0, 30, 70)];
    combinedLabel.font = [UIFont systemFontOfSize:13.0];
    combinedLabel.textColor = [UIColor colorWithHexString:@"4d4d4d"];
    combinedLabel.text = @"合计:";
    [bottomView addSubview:combinedLabel];
    
    //标价
    CGRect rect = [BaseUtil returnHeightWithContent:self.price WithFont:13 width:0 height:13];
    UILabel *priceLabel = [[UILabel alloc] initWithFrame:CGRectMake(combinedLabel.right+2, 0, rect.size.width + 10, 70)];
    priceLabel.text = self.price;
    priceLabel.textColor = [UIColor colorWithHexString:@"4d4d4d"];
    priceLabel.font = [UIFont systemFontOfSize:13.0];
    [bottomView addSubview:priceLabel];
    //付款
    UIButton *submitButton = [UIButton buttonWithType:UIButtonTypeCustom];
    submitButton.frame = CGRectMake(self.view.width- 105, 10, 90, 35);
    submitButton.layer.cornerRadius = 5;
    submitButton.backgroundColor = kAPI_AllMainColor;
    [submitButton setTitleColor:[UIColor whiteColor] forState:UIControlStateNormal];
    [submitButton setTitle:@"付款" forState:UIControlStateNormal];
    [submitButton addTarget:self action:@selector(didClickPayButton:) forControlEvents:UIControlEventTouchUpInside];
    [bottomView addSubview:submitButton];
    
    //0316
    if ([self isExpress]) {
        if ([self.price floatValue] < 30.00) {
            NSLog(@"pricepriceprice");
            
            UILabel *waringL = [[UILabel alloc]init];
            waringL.frame = CGRectMake(priceLabel.right + 5, 20, self.view.width - priceLabel.right - submitButton.width - 20, 13);
            waringL.font = [UIFont systemFontOfSize:13.0f];
            waringL.textColor = [UIColor colorWithHexString:@"4d4d4d"];
            waringL.text = @"+2物流费 ¥30以上没有物流费哦";
            waringL.adjustsFontSizeToFitWidth = YES;
            [bottomView addSubview:waringL];
            priceLabel.text = [NSString stringWithFormat:@"%.2f",([self.price floatValue] + 2.00)];
        }
        
    }
    
}

- (void)didClickPayButton:(UIButton *)sender{
    
    NSString *nameStr;
    NSString *phoneStr;
    NSString *addressStr;
    NSString *commentStr;
    NSLog(@"$$$$$$$$$$$$%@",self.category);
    if (timeL.text.length == 0) {
        //外卖类没有是时间
        if ([self returnTakeOutYesOrNo]) {
            
        } else {
            [BaseUtil toast:@"请选择时间"];
            return;
        }
    }
    //点菜类，如果是点菜类，需要填写姓名之类的东西
    if ([self returnOrderYesOrNo]) {
        if (nameTF.text.length == 0) {
            [BaseUtil toast:@"请填写姓名"];
            return;
        }
        if (phoneTF.text.length == 0) {
            [BaseUtil toast:@"请填写电话号码"];
            return;
        }
        if (beizhuTF.text.length == 0) {
            beizhuTF.text = @"";
        }
        //电话之类的
        nameStr = nameTF.text;
        phoneStr = phoneTF.text;
        addressStr = @"";
        commentStr = beizhuTF.text;
        
    }else{
        //除去点菜都是这种情况
        if (self.datasArray.count == 0) {
            [BaseUtil toast:@"添加一个地址"];
            return;
        }else{
            if ([[[NSUserDefaults standardUserDefaults] objectForKey:@"selectAddress"] isKindOfClass:[NSDictionary class]]) {
                nameStr = [[[NSUserDefaults standardUserDefaults] objectForKey:@"selectAddress"] objectForKey:@"name"];
                phoneStr = [[[NSUserDefaults standardUserDefaults] objectForKey:@"selectAddress"] objectForKey:@"phone"];
                addressStr = [[[NSUserDefaults standardUserDefaults] objectForKey:@"selectAddress"] objectForKey:@"id"];
            } else {
                CMCAddressItem *addressItem = [self.datasArray lastObject];
                //电话之类的
                nameStr = addressItem.name;
                phoneStr = addressItem.phone;
                addressStr = addressItem.id;
            }
            
            if (textF.text.length == 0) {
                commentStr = @"";
            }else{
                commentStr = textF.text;
            }
        }
    }
    
    //点菜内容
    NSMutableString *content = [NSMutableString string];
    for (int i = 0; i < self.orderArr.count; i++) {
        NSArray *arr = self.orderArr[i];
        NSString *tmpStr = [NSString stringWithFormat:@"%@,%@",arr[3],arr[4]];
        [content appendString:tmpStr];
        NSLog(@"self.orderArr = %@",self.orderArr);
        [content appendString:@"|"];
        
    }
    [content deleteCharactersInRange:NSMakeRange(content.length - 1, 1)];
    
    NSLog(@"contet ======= %@",content);
    NSLog(@"self.sec === %@",k_zid);
    NSString *timestamp = kAPI_timestamp;
    NSString *timeStr;
    //外卖类（没有时间）
    if ([self returnTakeOutYesOrNo]) {
        timeStr = @"0";
        NSLog(@"$$$$$$$$$$ %@",timeL.text);
    } else {
        
        timeStr =  timeL.text ;
    }
    [self isTrue];
    
    
    NSDictionary *dic = @{@"channel":KAPI_NewChannel,@"token":[CMCUserManager shareManager].token,@"app_ver":APPVersion,@"zid":k_zid,@"mid":self.merchant_id,@"service_id":self.service_id,@"money":_totalMoney,@"express_money":_express_money,@"content":content,@"payment":self.payment,@"comment":commentStr,@"timestamp":timestamp,@"name":nameStr,@"address_id":addressStr,@"phone":phoneStr,@"user_time":timeStr};
    NSLog(@"fukuan^$$$$$$$$$$$$$$$^^^^^^ %@",dic);
    NSString *sig = KAPI_GetSig(dic);
    NSDictionary *tmpDic = @{@"channel":KAPI_NewChannel,@"token":[CMCUserManager shareManager].token,@"app_ver":APPVersion,@"zid":k_zid,@"mid":self.merchant_id,@"service_id":self.service_id,@"money":_totalMoney,@"express_money":_express_money,@"content":content,@"payment":self.payment,@"comment":commentStr,@"timestamp":timestamp,@"name":nameStr,@"address_id":addressStr,@"phone":phoneStr,@"sig":sig,@"user_time":timeStr};
    
    NSString *url = KAPI_UserNewOrder;
    if ([_totalMoney floatValue] < 1.00) {
        [BaseUtil toast:@"低于1元不能提交订单"];
        return;
    }//0316
    
    [BaseUtil post:url postBody:tmpDic success:^(id responseObj) {
        NSLog(@"res====== %@",responseObj);
        if ([[[responseObj objectForKey:@"info"] objectForKey:@"result"] intValue] == 0) {
            if ([[responseObj objectForKey:@"data"] objectForKey:@"order_id"]) {
                NSString *order_id = [[responseObj objectForKey:@"data"] objectForKey:@"order_id"];
                NSLog(@"----------%@",order_id);
                
                if ([self.payment integerValue] == 0) {
                    
                    [self creatOrderSucess];
                }else{
                    [self  orderPayWithOrder_id:order_id];
                }
                
                
                
            }else {
                [BaseUtil toast:@"提交失败,请重试"];
                
            }
            
            
        }
        
    } ailure:^(NSError *error) {
        NSLog(@"error ==== %@",error);
        
    }];
    
    NSLog(@"付款");
    
}
- (void)isTrue
{
    if ([self isExpress]) {
        
        if ([self.price floatValue] < [[CMCUserManager shareManager].order_money floatValue]) {
            float p = [self.price floatValue] + [[CMCUserManager shareManager].express_money floatValue];
            _totalMoney = [NSString stringWithFormat:@"%.2f",p];
            _express_money = [CMCUserManager shareManager].express_money;
        }else{
            _totalMoney = self.price;
            _express_money = @"0";
        }
        
    } else {
        
        _totalMoney = self.price;
        _express_money = @"0";
        
    }
    
}

//- (BOOL)isExpress{
//    if ([self.category isEqualToString:@"外卖"] |[self.category isEqualToString:@"购物"] | [self.category isEqualToString:@"汽车用品"] | [self.category isEqualToString:@"洗衣"]|[self.category isEqualToString:@"修鞋"]) {
//        return YES;
//    }
//    return NO;
//}

//外卖类有物流
- (BOOL)isExpress{
    if ([[BaseUtil returnProcessWithService_id:self.service_id] isEqualToString:@"H"]) {
        return YES;
    }
    return NO;
}

- (void)addexpress_money
{
    
    [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(handle:) name:@"express" object:nil];
    
    
    
}
- (void)handle:(NSNotification *)notification
{
    
    
    _express_money = [[notification object] objectForKey:@"express_money"];
    _order_money = [[notification object] objectForKey:@"order_money"];
    
    NSLog(@"*****************************************");
    NSLog(@"%@,%@",_express_money,_order_money);
    
    
}
- (void)creatOrderSucess
{
    CMCOrderSucesssViewController *sucessVC = [[CMCOrderSucesssViewController alloc] init];
    [self.navigationController pushViewController:sucessVC animated:YES];
    sucessVC.hidesBottomBarWhenPushed = YES;
    
    
    
}

- (void)orderPayWithOrder_id:(NSString *)order_id{
    
    NSString *timestamp = kAPI_timestamp;
    NSDictionary *dic = @{@"channel":KAPI_NewChannel,@"token":[CMCUserManager shareManager].token,@"app_ver":APPVersion,@"order_id":order_id,@"timestamp":timestamp};
    NSString *sig = KAPI_GetSig(dic);
    NSString *url = KAPI_orderPay(order_id, timestamp, sig);
    
    [BaseUtil get:url success:^(id respondObject) {
        NSLog(@"----------resopObject === %@",respondObject);
        if ([[[[respondObject objectForKey:@"info"] objectForKey:@"result"]stringValue] isEqualToString:@"0"]) {
            NSDictionary *dataDic = [respondObject objectForKey:@"data"];
            NSString *money = [dataDic objectForKey:@"money"];
            NSString *order = [dataDic objectForKey:@"order_id"];
            NSLog(@"kAPI_NotifyURL  %@",kAPI_NotifyURL);
            
            //翼支付
            if ([self.payment integerValue] == 2) {
                
                CMCBestPayModel *model = [[CMCBestPayModel alloc] init];
                [model bestWithOrder_id:order_id money:money];
                
            }
            
            //支付宝
            if ([self.payment integerValue] == 1) {
                
                [BaseUtil PaymentForGoodsTradeNO:order productName:self.category amount:money];
                
            }
            
        }
        
        
    } failure:^(NSError *error) {
        
    }];
    
    
}


#pragma mark - tableviewDelegate -

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 1;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.orderArr.count;
}

- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section{
    return 0.1;
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return 32;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    return 58;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    UIView *view = [[UIView alloc]init];
    view.frame = CGRectMake(0, 0, self.view.width, 32);
    view.backgroundColor = [UIColor whiteColor];
    
    UIImageView *imageView = [[UIImageView alloc]init];
    imageView.frame = CGRectMake(10, 9, 14, 14);
    imageView.image = [UIImage imageNamed:@"shangjia"];
    [view addSubview:imageView];
    
    UILabel *nameL = [[UILabel alloc]init];
    nameL.frame = CGRectMake(imageView.right + 10, imageView.top, self.view.width - imageView.right - 10, 14);
    nameL.text = self.merchant_name;
    nameL.textColor = k_color(@"a2a2a2");
    nameL.font = k_font(14);
    [view addSubview:nameL];
    
    
    return view;
}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    static NSString *cellIndentifier = @"cell";
    CMCOrderMakeSureCell *cell = [tableView dequeueReusableCellWithIdentifier:cellIndentifier];
    if (nil == cell) {
        cell = [[CMCOrderMakeSureCell alloc]init];
    }
    NSArray *orderArr = self.orderArr[indexPath.row];
    cell.orderArr = orderArr;
    return cell;
    
}



#pragma mark - textFieldDelete -

- (BOOL)textFieldShouldReturn:(UITextField *)textField{
    
    [UIView animateWithDuration:0.5 animations:^{
        _infoScrollView.frame = CGRectMake(0, _orderTableView.bottom, self.view.width, self.view.height - _orderTableView.bottom - 49);
        
    }];
    [textField resignFirstResponder];
    return YES;
}


- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField{
    if (textField == nameTF) {
        [[[[nameTF accessoryToolBar] items]objectAtIndex:0]setEnabled:NO];
    }
    [textField resignFirstResponder];
    [UIView animateWithDuration:0.5 animations:^{
        _infoScrollView.frame = CGRectMake(0, 0, self.view.width,_infoScrollView.contentSize.height);
    }];
    [self.view bringSubviewToFront:_infoScrollView];
    return YES;
    
}


//- (BOOL)textFieldShouldEndEditing:(UITextField *)textField{
//        [UIView animateWithDuration:0.5 animations:^{
//            _infoScrollView.frame = CGRectMake(0, _orderTableView.bottom, self.view.width, self.view.height - _orderTableView.bottom - 49);
//        }];
//
//    return YES;
//}




#pragma mark -  公共方法 －


//创建label
- (CustomTextField *)createTLWithFrame:(CGRect)frame
                              category:(NSString *)category
                             superView:(UIView *)superView{
    UILabel *label = [[UILabel alloc]init];
    label.frame = frame;
    label.text = category;
    label.font = [UIFont systemFontOfSize:11.0];
    label.textColor = k_color(@"808080");
    [superView addSubview:label];
    
    CustomTextField *tf = [CustomTextField textFieldWithFrame:CGRectMake(label.right, label.top, 200, label.height) delegate:self];
    tf.target = self;
    tf.delegate = self;
    tf.switchPageAction = @selector(handleSwitchPageAction:);
    tf.doneAction = @selector(handleDoneAction:);
    [tf setupInputAccessoryView];
    
    tf.font = [UIFont systemFontOfSize:11];
    tf.textColor = k_color(@"808080");
    [superView addSubview:tf];
    
    //分割线
    UIView *sepeV = [[UIView alloc]init];
    if ([category isEqualToString:@"备注:"]) {
        sepeV.frame = CGRectMake(0,label.bottom + 10, self.view.width, 0.5);
        sepeV.backgroundColor = k_color(@"dadada");
    }else{
        sepeV.frame = CGRectMake(10,label.bottom + 10, self.view.width - 20, 0.5);
        sepeV.backgroundColor = k_color(@"ededed");
    }
    
    [superView addSubview:sepeV];
    
    return tf;
}

//给辅助键实现功能
- (void)handleSwitchPageAction:(UIBarButtonItem *)sender{
    NSInteger nextIndex = 0;//保存下一个要成为第一响应者的下标
    NSInteger currentIndex = 0;
    //遍历textFieldArray数组
    for (int i = 0; i < self.textFieldArray.count ; i++) {
        if ([self.textFieldArray[i] isFirstResponder]) {//判断当前下标的textField为第一响应者 把下标赋值给当前坐标变量
            currentIndex = i;
            break;
        }
    }
    
    
    if ([sender.title isEqualToString:@"下一项"]) {
        if (currentIndex <= 2) {//如果当前下标小于等于2 下一项的坐标为当前坐标+1
            nextIndex = currentIndex + 1;
            
        }
        
    }else{
        if (currentIndex >= 1) {//如果下标大于等于1 上一项的坐标为当前坐标-1
            nextIndex = currentIndex - 1;
        }
        
    }
    [self.textFieldArray[nextIndex] becomeFirstResponder];//下一个变为第一响应者
    
    
    if (nextIndex == 2) {//如果是最后一个textField,让下一项变的不可用
        [[[[self.textFieldArray[nextIndex] accessoryToolBar] items]objectAtIndex:1] setEnabled:NO];
    }
    
    if (nextIndex == 0) {//如果是第一textField,让上一项不可用
        [[[[self.textFieldArray[nextIndex] accessoryToolBar] items]objectAtIndex:0]setEnabled:NO];
    }
    
    
}

//完成键的功能实现
- (void)handleDoneAction:(UIBarButtonItem *)sender{
    [UIView animateWithDuration:0.5 animations:^{
        _infoScrollView.frame = CGRectMake(0, _orderTableView.bottom, self.view.width, self.view.height - _orderTableView.bottom - 49);
        
    }];
    
    //释放所有textField的第一响应权
    [self.textFieldArray makeObjectsPerformSelector:@selector(resignFirstResponder)];
    
}



//创建label
- (UILabel *)createLWithFrame:(CGRect)frame
                         font:(float)font
                    textColor:(NSString *)color
                    superView:(UIView *)superView{
    UILabel *label = [[UILabel alloc]init];
    label.frame = frame;
    label.font = [UIFont systemFontOfSize:font];
    label.textColor = [UIColor colorWithHexString:color];
    [superView addSubview:label];
    return label;
}


//添加底色
- (UIView *)createVWithFrame:(CGRect)frame{
    UIView *bottomV = [[UIView alloc]init];
    bottomV.frame = frame;
    bottomV.backgroundColor = [UIColor whiteColor];
    [_infoScrollView addSubview:bottomV];
    return bottomV;
}


- (void)createBttWithFrame:(CGRect)frame
                 imageName:(NSString *)imageName
                     title:(NSString *)title
                    action:(SEL)action
                 superView:(UIView *)superView
                       tag:(int)tag{
    UIButton *btt = [UIButton buttonWithType:UIButtonTypeCustom];
    btt.frame = frame;
    [btt setTitle:title forState:UIControlStateNormal];
    [btt addTarget:self action:action forControlEvents:UIControlEventTouchUpInside];
    btt.titleLabel.font = [UIFont systemFontOfSize:13];
    [btt setTitleColor:k_color(@"808080") forState:UIControlStateNormal];
    btt.imageEdgeInsets = UIEdgeInsetsMake(0, 0, 0, 40);
    btt.tag = tag;
    [btt setImage:[UIImage imageNamed:imageName] forState:UIControlStateNormal];
    [superView addSubview:btt];
    
}




//是否加时间
- (BOOL)returnIsHaveTimeL{
    if ([self returnTakeOutYesOrNo]) {
        return NO;
    }
    return YES;
}

//时间名字
- (NSString *)returnTitleName{
    //洗衣
    if ([self.service_id isEqualToString:@"14"]) {
        return @"取件时间：";
    }
    //修鞋
    if ([self.service_id isEqualToString:@"15"]) {
        return @"取件时间：";
    }
    //点                                                                                                                                    菜
    if ([self.service_id isEqualToString:@"1"]) {
        return @"到店时间：";
    }
    
    NSString *string = [BaseUtil returnCategoryWithService_id:self.service_id];
    NSString *cate = [string substringWithRange:NSMakeRange(0, 2)];
    return [NSString stringWithFormat:@"%@时间：",cate];
    
}

//点菜类
//- (BOOL)returnOrderYesOrNo{
//    if ([self.service_id isEqualToString:@"1"] | [self.service_id isEqualToString:@"9"]| [self.service_id isEqualToString:@"10"] | [self.service_id isEqualToString:@"9"] ) {
//
//        return YES;
//    }
//    return NO;
//}
//点菜类
- (BOOL)returnOrderYesOrNo{
    if ([[BaseUtil returnProcessWithService_id:self.service_id] isEqualToString:@"S"]) {
        
        return YES;
    }
    return NO;
}


////外卖类
//- (BOOL)returnTakeOutYesOrNo{
//    if ([self.service_id isEqualToString:@"2"] |[self.service_id isEqualToString:@"6"] | [self.service_id isEqualToString:@"13"] | [self.service_id isEqualToString:@"12"]) {
//        return YES;
//    }
//    return NO;
//}

//外卖类
- (BOOL)returnTakeOutYesOrNo{
    if ([[BaseUtil returnProcessWithService_id:self.service_id] isEqualToString:@"H"]) {
        return YES;
    }
    return NO;
}


//其他类型
- (BOOL)returnOtherYesOrNo{
    if ([self.service_id isEqualToString:@"11"] | [self.service_id isEqualToString:@"9"]) {
        return YES;
    }
    return NO;
    
    
}


#pragma mark end
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

/*
 #pragma mark - Navigation
 
 // In a storyboard-based application, you will often want to do a little preparation before navigation
 - (void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
 // Get the new view controller using [segue destinationViewController].
 // Pass the selected object to the new view controller.
 }
 */

@end
